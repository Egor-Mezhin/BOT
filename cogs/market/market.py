import discord
from discord.ext import commands
from config import connection
from lists import resources
count = 1 # –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –∫–æ–ª–ª–∏—á–µ—Å—Ç–≤–∞ —Ç–æ–≤–∞—Ä–∞


resourceName = { # –°–ø–∏—Å–æ–∫ —ç–º–æ–¥–∑–∏ –ø—Ä–∏—Å–≤–æ–µ–Ω—ã—Ö –∏–º–µ–Ω–∞–º –æ–ø—Ü–∏—è–º –≤ —Å–µ–ª–µ–∫—Ç –º–µ–Ω—é
    '–ñ–µ–ª–µ–∑–æ': resources['iron'],
    '–î—Ä–µ–≤–µ—Å–∏–Ω–∞': resources['organic'],
    '–û—Ä–≥–∞–Ω–∏–∫–∞': resources['wood'],
    '–î–µ—Ç–∞–ª–∏': resources['details'],
    '–ë–∞—Ç–∞—Ä–µ–π–∫–∏': resources['batteries'],
    '–û—Å–∫–æ–ª–∫–∏': resources['shards'],
} 

class Market(commands.Cog): # –í—ã–∑—ã–≤–∞–µ—Ç –†—ã–Ω–æ–∫
    def __init__(self, Bot: discord.Bot):
        self.Bot = Bot

    @discord.slash_command(name = "—Ä—ã–Ω–æ–∫", description="–æ—Ç–∫—Ä—ã–≤–∞–µ—Ç —Ä—ã–Ω–æ–∫ —Å—Ç–æ–ª–∏—Ü—ã") 
    async def createF(self, ctx):
        embed = discord.Embed(
            title="–†—ã–Ω–æ–∫",
            description="–í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ...",
            color=discord.Colour.random(),
        )
        await ctx.respond(embed = embed, view = MarketView(ctx.author.id))

class MarketView(discord.ui.View): # –°–µ–ª–µ–∫—Ç –º–µ–Ω—é –¥–ª—è —Ä—ã–Ω–∫–∞
    def __init__(self, id):
        super().__init__()
        self.id = id

    @discord.ui.select( 
            placeholder = "üî∫ | –ö—É–ø–∏—Ç—å", 
            min_values = 1, 
            max_values = 1, 
            options = [ 
                discord.SelectOption(
                    label="–ñ–µ–ª–µ–∑–æ",
                    description=f"–¶–µ–Ω–∞: X –∑–∞ —à—Ç—É–∫—É",
                    emoji= resources['iron']
                ),
                discord.SelectOption(
                    label="–î—Ä–µ–≤–µ—Å–∏–Ω–∞",
                    description=f"–¶–µ–Ω–∞: X –∑–∞ —à—Ç—É–∫—É",
                    emoji= resources['organic']
                ),
                discord.SelectOption(
                    label="–û—Ä–≥–∞–Ω–∏–∫–∞",
                    description=f"–¶–µ–Ω–∞: X –∑–∞ —à—Ç—É–∫—É",
                    emoji= resources['wood']
                ),
                discord.SelectOption(
                    label="–î–µ—Ç–∞–ª–∏",
                    description=f"–¶–µ–Ω–∞: X –∑–∞ —à—Ç—É–∫—É",
                    emoji= resources['details']
                ),
                discord.SelectOption(
                    label="–ë–∞—Ç–∞—Ä–µ–π–∫–∏",
                    description=f"–¶–µ–Ω–∞: X –∑–∞ —à—Ç—É–∫—É",
                    emoji= resources['batteries']
                ),
                discord.SelectOption(
                    label="–û—Å–∫–æ–ª–∫–∏",
                    description=f"–¶–µ–Ω–∞: X –∑–∞ —à—Ç—É–∫—É",
                    emoji= resources['shards']
                )
            ]
    )
    async def select_buy(self, select, interaction):
        if interaction.user.id != self.id:
            await interaction.response.send_message(content="–¢—ã –Ω–µ –∞–≤—Ç–æ—Ä —Å–æ–æ–±—â–µ–Ω–∏—è", ephemeral=True)
        else:
            global count, selectName, operator # –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∫–æ–ª–ª–∏—á–µ—Å—Ç–≤–∞ —Ç–æ–≤–∞—Ä–∞, –Ω–∞–∑–≤–∞–Ω–∏–µ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Ç–æ–≤–∞—Ä–∞ + –µ–≥–æ —ç–º–æ–¥–∑–∏ –∏ –æ–ø–µ—Ä–∞—Ç–æ—Ä –ø–æ–∫—É–ø–∫–∏ –∏–ª–∏ –ø—Ä–æ–¥–∞–∂–∏
            operator = True
            selectName = resourceName[select.values[0]]
            embed = discord.Embed(
                title=f"–°–∫–æ–ª—å–∫–æ **{selectName}** –≤—ã —Ö–æ—Ç–∏—Ç–µ –∫—É–ø–∏—Ç—å?",
                description=f"{count}",
                color=discord.Colour.blue(),
            )
            await interaction.response.edit_message(embed = embed, view = –°alculatorView(interaction.user.id))


    @discord.ui.select( 
            placeholder = "üîª | –ü—Ä–æ–¥–∞—Ç—å", 
            min_values = 1, 
            max_values = 1, 
            options = [ 
                discord.SelectOption(
                    label="–ñ–µ–ª–µ–∑–æ",
                    description=f"–¶–µ–Ω–∞: X –∑–∞ —à—Ç—É–∫—É",
                    emoji= resources['iron']
                ),
                discord.SelectOption(
                    label="–î—Ä–µ–≤–µ—Å–∏–Ω–∞",
                    description=f"–¶–µ–Ω–∞: X –∑–∞ —à—Ç—É–∫—É",
                    emoji= resources['organic']
                ),
                discord.SelectOption(
                    label="–û—Ä–≥–∞–Ω–∏–∫–∞",
                    description=f"–¶–µ–Ω–∞: X –∑–∞ —à—Ç—É–∫—É",
                    emoji= resources['wood']
                ),
                discord.SelectOption(
                    label="–î–µ—Ç–∞–ª–∏",
                    description=f"–¶–µ–Ω–∞: X –∑–∞ —à—Ç—É–∫—É",
                    emoji= resources['details']
                ),
                discord.SelectOption(
                    label="–ë–∞—Ç–∞—Ä–µ–π–∫–∏",
                    description=f"–¶–µ–Ω–∞: X –∑–∞ —à—Ç—É–∫—É",
                    emoji= resources['batteries']
                ),
                discord.SelectOption(
                    label="–û—Å–∫–æ–ª–∫–∏",
                    description=f"–¶–µ–Ω–∞: X –∑–∞ —à—Ç—É–∫—É",
                    emoji= resources['shards']
                )
            ]
    )
    async def select_sell(self, select, interaction):
        if interaction.user.id != self.id:
            await interaction.response.send_message(content="–¢—ã –Ω–µ –∞–≤—Ç–æ—Ä —Å–æ–æ–±—â–µ–Ω–∏—è", ephemeral=True)
        else:
            global count, selectName, operator # –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∫–æ–ª–ª–∏—á–µ—Å—Ç–≤–∞ —Ç–æ–≤–∞—Ä–∞, –Ω–∞–∑–≤–∞–Ω–∏–µ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Ç–æ–≤–∞—Ä–∞ –∏ –æ–ø–µ—Ä–∞—Ç–æ—Ä –ø–æ–∫—É–ø–∫–∏ –∏–ª–∏ –ø—Ä–æ–¥–∞–∂–∏
            operator = False
            selectName = resourceName[select.values[0]]
            embed = discord.Embed(
                title=f"–°–∫–æ–ª—å–∫–æ **{selectName}** –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø—Ä–æ–¥–∞—Ç—å?",
                description=f"{count}",
                color=discord.Colour.blue(),
            )
            await interaction.response.edit_message(embed = embed, view = –°alculatorView(interaction.user.id))
        

class –°alculatorView(discord.ui.View): # –ö–Ω–æ–ø–∫–∏ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞ –¥–ª—è –ø–æ–∫—É–ø–∫–∏ –∏–ª–∏ –ø—Ä–æ–¥–∞–∂–∏
    def __init__(self, id):
        super().__init__()
        self.id = id

    @discord.ui.button(label="+1", style=discord.ButtonStyle.primary, row=1) 
    async def buysell_button_p1(self, button, interaction):
        if interaction.user.id != self.id:
            await interaction.response.send_message(content="–¢—ã –Ω–µ –∞–≤—Ç–æ—Ä —Å–æ–æ–±—â–µ–Ω–∏—è", ephemeral=True)
        else:
            global count, selectName, operator
            count += 1
            if operator:
                embed = discord.Embed(
                    title=f"–°–∫–æ–ª—å–∫–æ **{selectName}** –≤—ã —Ö–æ—Ç–∏—Ç–µ –∫—É–ø–∏—Ç—å?",
                    description=f"{count}",
                    color=discord.Colour.blue(),
                )
            await interaction.response.edit_message(embed = embed)

    @discord.ui.button(label="+10", style=discord.ButtonStyle.primary, row=1) 
    async def buysell_button_p10(self, button, interaction):
        if interaction.user.id != self.id:
            await interaction.response.send_message(content="–¢—ã –Ω–µ –∞–≤—Ç–æ—Ä —Å–æ–æ–±—â–µ–Ω–∏—è", ephemeral=True)
        else:
            global count, selectName, operator
            count += 10
            if operator:        
                embed = discord.Embed(
                    title=f"–°–∫–æ–ª—å–∫–æ **{selectName}** –≤—ã —Ö–æ—Ç–∏—Ç–µ –∫—É–ø–∏—Ç—å?",
                    description=f"{count}",
                    color=discord.Colour.blue(),
                )
            await interaction.response.edit_message(embed = embed)

    @discord.ui.button(label="+100", style=discord.ButtonStyle.primary, row=1) 
    async def buysell_button_p100(self, button, interaction):
        if interaction.user.id != self.id:
            await interaction.response.send_message(content="–¢—ã –Ω–µ –∞–≤—Ç–æ—Ä —Å–æ–æ–±—â–µ–Ω–∏—è", ephemeral=True)
        else:
            global count, selectName, operator
            count += 100
            if operator:
                embed = discord.Embed(
                    title=f"–°–∫–æ–ª—å–∫–æ **{selectName}** –≤—ã —Ö–æ—Ç–∏—Ç–µ –∫—É–ø–∏—Ç—å?",
                    description=f"{count}",
                    color=discord.Colour.blue(),
                )
            await interaction.response.edit_message(embed = embed)
    
    @discord.ui.button(style=discord.ButtonStyle.green, emoji = "ü™ô", row=1) # emoji –º–æ–Ω–µ—Ç–∫–∏
    async def buysell_button(self, button, interaction):
        if interaction.user.id != self.id:
            await interaction.response.send_message(content="–¢—ã –Ω–µ –∞–≤—Ç–æ—Ä —Å–æ–æ–±—â–µ–Ω–∏—è", ephemeral=True)
        else:
            global count, selectName, operator, operator

            if operator:
                embed = discord.Embed(
                    title=f"–¢—ã –∫—É–ø–∏–ª {count} {selectName} –Ω–æ –≤ –±–∞–ª–∞–Ω—Å–µ –∏—Ö –ø–æ–∫–∞ –Ω–µ—Ç. –ø–æ—Ç–æ–º –¥–∞–º)",
                    description=f"–¢—ã –∫—É–ø–∏–ª {count} {selectName} –Ω–æ –≤ –±–∞–ª–∞–Ω—Å–µ –∏—Ö –ø–æ–∫–∞ –Ω–µ—Ç. –ø–æ—Ç–æ–º –¥–∞–º)",
                    color=discord.Colour.blue(),
                )
                await interaction.response.edit_message(embed = embed, view = None)

            else:
                embed = discord.Embed(
                    title=f"–¢—ã –ø—Ä–æ–¥–∞–ª {count} {selectName} –Ω–æ –≤ –±–∞–ª–∞–Ω—Å–µ –∏—Ö –ø–æ–∫–∞ –Ω–µ—Ç. –ø–æ—Ç–æ–º –¥–∞–º)",
                    description=f"–¢—ã –ø—Ä–æ–¥–∞–ª {count} {selectName} –Ω–æ –≤ –±–∞–ª–∞–Ω—Å–µ –∏—Ö –ø–æ–∫–∞ –Ω–µ—Ç. –ø–æ—Ç–æ–º –¥–∞–º)",
                    color=discord.Colour.blue(),
                )
                await interaction.response.edit_message(embed = embed, view = None)            

    @discord.ui.button(label="-1", style=discord.ButtonStyle.primary, row=2) 
    async def buysell_button_m1(self, button, interaction):
        if interaction.user.id != self.id:
            await interaction.response.send_message(content="–¢—ã –Ω–µ –∞–≤—Ç–æ—Ä —Å–æ–æ–±—â–µ–Ω–∏—è", ephemeral=True)
        else:
            global count, selectName, operator
            if count - 1 < 1:
                await interaction.response.send_message("–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å —Ç–æ–≤–∞—Ä –º–µ–Ω—å—à–µ –µ–¥–µ–Ω–∏—Ü—ã", ephemeral=True)
            else:
                count -= 1
                if operator:
                    embed = discord.Embed(
                        title=f"–°–∫–æ–ª—å–∫–æ **{selectName}** –≤—ã —Ö–æ—Ç–∏—Ç–µ –∫—É–ø–∏—Ç—å?",
                        description=f"{count}",
                        color=discord.Colour.blue(),
                    )
                await interaction.response.edit_message(embed = embed)

    @discord.ui.button(label="-10", style=discord.ButtonStyle.primary, row=2) 
    async def buysell_button_m10(self, button, interaction):
        if interaction.user.id != self.id:
            await interaction.response.send_message(content="–¢—ã –Ω–µ –∞–≤—Ç–æ—Ä —Å–æ–æ–±—â–µ–Ω–∏—è", ephemeral=True)
        else:
            global count, selectName, operator
            if count - 10 < 1:
                await interaction.response.send_message("–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å —Ç–æ–≤–∞—Ä –º–µ–Ω—å—à–µ –µ–¥–µ–Ω–∏—Ü—ã", ephemeral=True)
            else:
                count -= 10
                if operator:
                    embed = discord.Embed(
                        title=f"–°–∫–æ–ª—å–∫–æ **{selectName}** –≤—ã —Ö–æ—Ç–∏—Ç–µ –∫—É–ø–∏—Ç—å?",
                        description=f"{count}",
                        color=discord.Colour.blue(),
                    )
                await interaction.response.edit_message(embed = embed)

    @discord.ui.button(label="-100", style=discord.ButtonStyle.primary, row=2) 
    async def buysell_button_m100(self, button, interaction):
        if interaction.user.id != self.id:
            await interaction.response.send_message(content="–¢—ã –Ω–µ –∞–≤—Ç–æ—Ä —Å–æ–æ–±—â–µ–Ω–∏—è", ephemeral=True)
        else:
            global count, selectName, operator
            if count - 100 < 1:
                await interaction.response.send_message("–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å —Ç–æ–≤–∞—Ä –º–µ–Ω—å—à–µ –µ–¥–µ–Ω–∏—Ü—ã", ephemeral=True)
            else:
                count -= 100
                if operator:
                    embed = discord.Embed(
                        title=f"–°–∫–æ–ª—å–∫–æ **{selectName}** –≤—ã —Ö–æ—Ç–∏—Ç–µ –∫—É–ø–∏—Ç—å?",
                        description=f"{count}",
                        color=discord.Colour.blue(),
                    )
                await interaction.response.edit_message(embed = embed)
        
def setup(bot):
    bot.add_cog(Market(bot)) 
